/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * datiEvento.java
 *
 * Created on 22-giu-2009, 10.29.22
 */

package it.seerp.Gui.Gestione.agenda;

import it.seerp.Gui.Gestione.BottoniGenerici.ButtonAnnulla;
import it.seerp.Gui.Gestione.BottoniGenerici.ButtonSalva;
import it.seerp.Gui.configurazioni.Gui.ConfigurazioneOperazioni;
import it.seerp.Gui.configurazioni.Screen;
import it.seerp.application.applicazione.AppAgenda;
import it.seerp.application.bean.BeanGuiEvento;
import it.seerp.application.conversioni.Conversione;
import it.seerp.storage.ejb.Evento;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author peppe
 */
public class datiEvento extends javax.swing.JDialog {
    ConfigurazioneOperazioni.TIPO_OPE_CONST tipoOp;
    private BeanGuiEvento be;
    private CalendarPanel pannel;
    /** Creates new form datiEvento */
    public datiEvento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
            tipoOp = ConfigurazioneOperazioni.TIPO_OPE_CONST.VISUALIZZA;
            initComponents();
            legameBean();
            setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            Screen.centraFinestra(this);

    }

    private BeanGuiEvento getBeanGuiEvento() {
         return be;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        txt_nome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_luogo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_note = new javax.swing.JTextArea();
        data = new org.jdesktop.swingx.JXDatePicker();
        buttonOperazione = new it.seerp.Gui.Gestione.BottoniGenerici.ButtonSalva();
        buttonAnnulla1 = new it.seerp.Gui.Gestione.BottoniGenerici.ButtonAnnulla();
        chk_notifica = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_ora = new javax.swing.JFormattedTextField();
        txt_tema = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(285, 340));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel1.setText("Nome:");
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel1, gridBagConstraints);

        txt_nome.setFont(new java.awt.Font("Tahoma", 0, 12));
        txt_nome.setName("txt_nome"); // NOI18N
        txt_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(txt_nome, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel2.setText("Tema");
        jLabel2.setName("jLabel2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel3.setText("Luogo");
        jLabel3.setName("jLabel3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel3, gridBagConstraints);

        txt_luogo.setFont(new java.awt.Font("Tahoma", 0, 12));
        txt_luogo.setName("txt_luogo"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(txt_luogo, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel4.setText("Dara:");
        jLabel4.setName("jLabel4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel5.setText("Ora");
        jLabel5.setName("jLabel5"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel6.setText("Notifica");
        jLabel6.setName("jLabel6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel8.setText("Note");
        jLabel8.setName("jLabel8"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txt_note.setColumns(20);
        txt_note.setFont(new java.awt.Font("Tahoma", 0, 12));
        txt_note.setRows(5);
        txt_note.setName("txt_note"); // NOI18N
        jScrollPane1.setViewportView(txt_note);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        data.setFont(new java.awt.Font("Tahoma", 0, 12));
        data.setName("data"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(data, gridBagConstraints);

        buttonOperazione.setText("Ok");
        buttonOperazione.setName("buttonOperazione"); // NOI18N
        buttonOperazione.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOperazioneActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(buttonOperazione, gridBagConstraints);

        buttonAnnulla1.setText("Chiudi");
        buttonAnnulla1.setName("buttonAnnulla1"); // NOI18N
        buttonAnnulla1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnnulla1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(buttonAnnulla1, gridBagConstraints);

        chk_notifica.setFont(new java.awt.Font("Tahoma", 0, 12));
        chk_notifica.setName("chk_notifica"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(chk_notifica, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel7.setText("Id:");
        jLabel7.setName("jLabel7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jLabel7, gridBagConstraints);

        txt_id.setFont(new java.awt.Font("Tahoma", 0, 12));
        txt_id.setName("txt_id"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(txt_id, gridBagConstraints);

        try {
            javax.swing.text.MaskFormatter mask = new javax.swing.text.MaskFormatter("##:##:##");
            mask.setPlaceholderCharacter('_');
            txt_ora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mask));
        } catch (java.text.ParseException ex) {
            JOptionPane.showMessageDialog(null, "Errore nella creazione del dialogo","",JOptionPane.ERROR_MESSAGE);
        }
        txt_ora.setFont(new java.awt.Font("Tahoma", 0, 12));
        txt_ora.setName("txt_ora"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(txt_ora, gridBagConstraints);

        txt_tema.setEditable(true);
        txt_tema.setFont(new java.awt.Font("Tahoma", 0, 12));
        txt_tema.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Compleanno", "Riunione", "Anniversario", "Appuntamento", "Cena Aziendale", "Promemoria", "Convegno", "Colloquio", "Altro" }));
        txt_tema.setSelectedIndex(5);
        txt_tema.setName("txt_tema"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        getContentPane().add(txt_tema, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public CalendarPanel getCalendarPannel() {
        return pannel;
    }

    public void setCalendarPannel(CalendarPanel pannel) {
        this.pannel = pannel;
        be.setIdAgenda(pannel.getIdAgenda());
    }
    private void legameBean() {
        be= new BeanGuiEvento();
        be.setData(data);
        be.setIdEvento(txt_id);
        be.setLuogo(txt_luogo);
        be.setNome(txt_nome);
        be.setNote(txt_note);
        be.setNotifica(chk_notifica);
        be.setOra(txt_ora);
        be.setTema(txt_tema);
        
    }

    public void resetAll() {
        txt_nome.setText("");
        txt_luogo.setText("");
        txt_tema.setSelectedIndex(-1);
        //txt_tema.
        txt_ora.setText("");
        txt_note.setText("");
        chk_notifica.setSelected(false);
        data.setDate(null);
        txt_id.setText("");
    }

    private void txt_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomeActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txt_nomeActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void buttonAnnulla1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnnulla1ActionPerformed
        if(tipoOp.equals(ConfigurazioneOperazioni.TIPO_OPE_CONST.INSERISCI)) {
            pannel.getMenu().setButtonEnabled(true);
        }
        else if(tipoOp.equals(ConfigurazioneOperazioni.TIPO_OPE_CONST.MODIFICA)) {
            pannel.getMenu().setButtonEnabled(true);
        }
        setVisible(false);
    }//GEN-LAST:event_buttonAnnulla1ActionPerformed

    private void buttonOperazioneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOperazioneActionPerformed
       if(tipoOp.equals(ConfigurazioneOperazioni.TIPO_OPE_CONST.VISUALIZZA)) {
           //this.setVisible(false);
           modifica();
       }
           
       else if(tipoOp.equals(ConfigurazioneOperazioni.TIPO_OPE_CONST.INSERISCI)) {
           AppAgenda ap= new AppAgenda();
           ap.inserimento(be);
           pannel.reset();
           pannel.getMenu().setButtonEnabled(true);
           this.setVisible(false);
       }
       else if(tipoOp.equals(ConfigurazioneOperazioni.TIPO_OPE_CONST.MODIFICA)){
           AppAgenda ap= new AppAgenda();
           ap.modifica(be);
           pannel.reset();
           pannel.getMenu().setButtonEnabled(true);
           this.setVisible(false);
       }
    }//GEN-LAST:event_buttonOperazioneActionPerformed

    /**
    * @param args the command line arguments
    */
    public void visualizza(Evento e) {
       //final datiEvento f = new datiEvento(new JFrame(), true);
        resetAll();
        //txt_ora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("H:mm:ss"))));
        buttonOperazione.setText("Modifica");
        tipoOp=ConfigurazioneOperazioni.TIPO_OPE_CONST.VISUALIZZA;
        Conversione.conversioneEvento(e, be);
        //f.getButtonOperazione().setText("Ok");
        setEditable(false);
        setVisible(true);

    }
    public void inserisci()
    {
        resetAll();
        //txt_ora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mask));
        setModal(false);
        setEditable(true);
        buttonOperazione.setText("Salva");
        tipoOp=ConfigurazioneOperazioni.TIPO_OPE_CONST.INSERISCI;
        pannel.getMenu().setButtonEnabled(false);
        data.setDate(new Date());
        setVisible(true);
    }
    public void modifica() {
        setEditable(true);
        buttonOperazione.setText("Salva");
        tipoOp=ConfigurazioneOperazioni.TIPO_OPE_CONST.MODIFICA;
        pannel.getMenu().setButtonEnabled(false);
        setVisible(true);
    }
    public void modifica(Evento e) {
        resetAll();
        //txt_ora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("H:mm:ss"))));
        Conversione.conversioneEvento(e, be);
        setEditable(true);
        buttonOperazione.setText("Salva");
        tipoOp=ConfigurazioneOperazioni.TIPO_OPE_CONST.MODIFICA;
        pannel.getMenu().setButtonEnabled(false);
        setVisible(true);
    }

    public ButtonAnnulla getButtonAnnulla() {
        return buttonAnnulla1;
    }

    public ButtonSalva getButtonOperazione() {
        return buttonOperazione;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private it.seerp.Gui.Gestione.BottoniGenerici.ButtonAnnulla buttonAnnulla1;
    private it.seerp.Gui.Gestione.BottoniGenerici.ButtonSalva buttonOperazione;
    private javax.swing.JCheckBox chk_notifica;
    private org.jdesktop.swingx.JXDatePicker data;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_luogo;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextArea txt_note;
    private javax.swing.JFormattedTextField txt_ora;
    private javax.swing.JComboBox txt_tema;
    // End of variables declaration//GEN-END:variables

    public void setEditable (boolean f) {
        txt_nome.setEditable(f);
        txt_luogo.setEditable(f);
        txt_tema.setEnabled(f);
        txt_ora.setEditable(f);
        txt_note.setEditable(f);
        chk_notifica.setEnabled(f);
        data.setEditable(f);
        txt_id.setEditable(false);
    }
    public void setTipoOP(ConfigurazioneOperazioni.TIPO_OPE_CONST tipo) {
        this.tipoOp = tipo;
    }

}
